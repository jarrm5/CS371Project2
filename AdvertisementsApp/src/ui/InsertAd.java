/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import db.EmptyFieldException;
import db.SQLHelper;
import db.SQLHelper.Record;
import db.User;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author jarrm5
 */
public class InsertAd extends javax.swing.JFrame {
    
    private SQLHelper helper;
    private UserAds parent;
    private User owner;
    private final String priceRegEx = "[0-9]+([,.][0-9]{1,2})?"; //Used for price validation

    /**
     * Creates new form InsertAd
     */
    public InsertAd(SQLHelper helper,UserAds parent,User owner) {
        this.helper = helper;
        this.parent = parent;
        this.owner = owner;
        this.setTitle("Add an advertisement (" + owner.toString() + ")");
        initComponents();
        populate_category_names();
    }
    
    //Get all the category names for the drop down box
    private void populate_category_names(){
        LinkedList<SQLHelper.Record> names=helper.getCategoryNames();
        this.categoryBox.removeAllItems();
        this.categoryBox.addItem("Select a Category..");
        for(SQLHelper.Record n:names){
            this.categoryBox.addItem(n);
        }   
    }
    //The db requires that title,details,price,category fields must not be null
    //Check for empty fields here.. if they were all filled, return true, otherwise
    //throw an exception
    private boolean validate_fields(String title,String details,String price,int category) throws EmptyFieldException{
        //validate title
        if(title.equals("")){
            throw new EmptyFieldException("You must provide a title");
        }
        //validate details
        if(details.equals("")){
            throw new EmptyFieldException("You must provide some details.");
        }
        //validate price
        if(price.equals("")){
            throw new EmptyFieldException("You must provide a price.");
        }
        else{
            //Price was not empty
            //Now Check against price regex
            if(!price.matches(priceRegEx)){
                throw new EmptyFieldException("- Make sure price uses only numbers and optional decimal point\n- Make sure price follows XXX.XX format");
            }
        }
        //validate category selection
        if(category == 0){
            throw new EmptyFieldException("You must select a category.");
        }
        
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        categoryBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailsArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Title:");

        jLabel2.setText("Details:");

        jLabel3.setText("Category:");

        jLabel4.setText("Price:");

        addButton.setText("Add Advertisement");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        detailsArea.setColumns(20);
        detailsArea.setRows(5);
        jScrollPane1.setViewportView(detailsArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleField)
                            .addComponent(categoryBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(addButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //button for adding an advertisement was clicked
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        //Collect all the fields
        String title = titleField.getText().trim();
        String details = detailsArea.getText().trim();
        String price = priceField.getText().trim();
        int category = categoryBox.getSelectedIndex();
        
        //succesfully inserted to db?
        boolean inserted = false;
        
        try{
            if(validate_fields(title,details,price,category)){
                //Passed all validation tests
                
                //Need to cast the price to double 
                double castedPrice = Double.parseDouble(price);
                
                //insert to the database
                inserted = helper.addAdvertisement(title,details,castedPrice,owner.getUserId(),((Record)this.categoryBox.getSelectedItem()).ID);
                
                if(!inserted){
                    JOptionPane.showMessageDialog(null, "There was a problem inserting to database.");
                }
                else{
                    //Show success message
                    JOptionPane.showMessageDialog(null, "Advertisement succesfully submitted!");
                
                    //Reload the tables from Userds screen
                    //Don't need to reload global advertisements since all inserted ads aren't active ('AC')
                    //Refresh the owner's advertisements though
                    parent.populate_myadvertisements_table();

                    //Destroy this frame
                    setVisible(false);
                    dispose();
                }
            }
        }
        catch(EmptyFieldException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }     
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox categoryBox;
    private javax.swing.JTextArea detailsArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField titleField;
    // End of variables declaration//GEN-END:variables

    
}
