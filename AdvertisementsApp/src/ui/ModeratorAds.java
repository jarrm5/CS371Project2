/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import db.SQLHelper;
import db.SQLHelper.Record;
import db.User;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jarrm5
 */
public class ModeratorAds extends javax.swing.JFrame {
    
    private User user;
    private SQLHelper helper;
    private String[] UnclaimedColumns=new String [] {"ID","Title","Description", "Price", "Date","Username"};
    private String[] MyAdvColumns=new String [] {"ID","Title","Description","Price","Status","Date","Username"};
    /**
     * Creates new form ModeratorAds
     */
    public ModeratorAds(User user,SQLHelper helper) {
        this.user = user;
        this.helper = helper;
        this.setTitle(user.toString());
        initComponents();
        populate_unclaimed_table("");
        populate_myadvertisements_table();
        populate_category_names();
    }
    //Get all the category names for the drop down box
    private void populate_category_names(){
        LinkedList<Record> names=helper.getCategoryNames();
        this.CatFilter.removeAllItems();
        this.CatFilter.addItem("All");
        for(Record n:names){
            this.CatFilter.addItem(n);
        }   
    }
    //Get all advertisements that are pending
    //String AND parameter allows for additional filtering
    public void populate_unclaimed_table(String AND){
        Object[][] Data=helper.getUnclaimedAdvertisements(AND);
        this.unclaimedJTable.setModel(new DefaultTableModel(Data,UnclaimedColumns));
    }
    //Get all of this moderator's advertisements
    public void populate_myadvertisements_table(){
        Object[][] Data=helper.getModeratorAdvertisements(user.getUserId());
        this.moderatorAdvertisementsJTable.setModel(new DefaultTableModel(Data,MyAdvColumns));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        unclaimedJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        CatFilter = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        PeriodFilter = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        SearchTextBox = new javax.swing.JTextField();
        GoButton = new javax.swing.JButton();
        ClaimButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        moderatorAdvertisementsJTable = new javax.swing.JTable();
        ApproveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        unclaimedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(unclaimedJTable);

        jLabel1.setText("Category");

        CatFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatFilterActionPerformed(evt);
            }
        });

        jLabel2.setText("Period");

        PeriodFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Last 3 months", "Last 6 months", "Last 12 months" }));
        PeriodFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodFilterActionPerformed(evt);
            }
        });

        jLabel3.setText("Title,Description");

        GoButton.setText("Go");
        GoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoButtonActionPerformed(evt);
            }
        });

        ClaimButton.setText("Claim Ad");
        ClaimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClaimButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ClaimButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                .addComponent(CatFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(37, 37, 37)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(PeriodFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(SearchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CatFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PeriodFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GoButton))
                .addGap(18, 18, 18)
                .addComponent(ClaimButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Unclaimed Advertisements", jPanel1);

        moderatorAdvertisementsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(moderatorAdvertisementsJTable);

        ApproveButton.setText("Approve");
        ApproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ApproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(ApproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My Advertisements", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CatFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatFilterActionPerformed
        //Build an AND statement depending on which category filter was selected
        String AND = "";
        
        switch(CatFilter.getSelectedIndex()){
            //All selected
            case 0:
                break;
            //Cars and Trucks selected
            case 1:
                AND = " AND category_ID = 'CAT'";
                break;
            //Child Care selected
            case 2:
                AND = " AND category_ID = 'CCA'";
                break;
            //Electric selected
            case 3:
                AND = " AND category_ID = 'ELC'";
                break;
            //household selected
            case 4:
                AND = " AND category_ID = 'HOU'";
                break;
            default:
                AND += ";";
        }
        populate_unclaimed_table(AND);
    }//GEN-LAST:event_CatFilterActionPerformed

    private void PeriodFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodFilterActionPerformed
        //Build an AND statement depeneding on which period filter was selected
        String AND = "";
        
        switch(PeriodFilter.getSelectedIndex()){
            //All selected
            case 0:
                break;
            //Case for 3 months
            case 1:
                AND = " AND DATEDIFF(NOW(),AdvDateTime) < 90";
                break;
            //case for 6 months
            case 2:
                AND = " AND DATEDIFF(NOW(),AdvDateTime) < 180";
                break;
            //case for 12 months
            case 3:
                AND = " AND DATEDIFF(NOW(),AdvDateTime) < 365";
                break;
            default:
                AND += ";";
        }
        populate_unclaimed_table(AND);
    }//GEN-LAST:event_PeriodFilterActionPerformed

    private void GoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoButtonActionPerformed
        String search = SearchTextBox.getText(); 
        String AND = " AND (AdvTitle LIKE '%" + search + "%' OR AdvDetails LIKE '%" + search + "%');";
        populate_unclaimed_table(AND);
    }//GEN-LAST:event_GoButtonActionPerformed

    private void ClaimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClaimButtonActionPerformed
        //"Claim" means assign this moderator to the advertisement
        int rowClicked = unclaimedJTable.getSelectedRow();
        boolean result = false;
        
        //Check to see if a row was clicked at all
        if(rowClicked >= 0){
            //Row clicked, now get the id of the ad that was clicked
            String toUpdate = unclaimedJTable.getValueAt(rowClicked,0).toString();
            //update it
            result=helper.claimAdvertisement(toUpdate,user.getUserId());
        }
        
        //Show message that the ad was succesfully claimed.
        if(result){
             JOptionPane.showMessageDialog(this,"Succesfully claimed Ad #" + unclaimedJTable.getValueAt(rowClicked,0),"Confirmation",JOptionPane.INFORMATION_MESSAGE);
        }
        //reload the unclaimed ads screen
        populate_unclaimed_table("");
        populate_myadvertisements_table();
    }//GEN-LAST:event_ClaimButtonActionPerformed

    private void ApproveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveButtonActionPerformed
        //"Approve" means assign the "AC" status to the advertisement
        int rowClicked = moderatorAdvertisementsJTable.getSelectedRow();
        boolean result = false;
        
        //Check to see if a row was clicked at all
        if(rowClicked >= 0){
            //Row clicked, now get the id of the ad that was clicked
            String toUpdate = moderatorAdvertisementsJTable.getValueAt(rowClicked,0).toString();
            //update it
            result=helper.approveAdvertisement(toUpdate);
        }
        
        //Show message that the ad was succesfully claimed.
        if(result){
             JOptionPane.showMessageDialog(this,"Succesfully approved Ad #" + moderatorAdvertisementsJTable.getValueAt(rowClicked,0),"Confirmation",JOptionPane.INFORMATION_MESSAGE);
        }
        //reload the unclaimed ads screen
        populate_unclaimed_table("");
        populate_myadvertisements_table();
    }//GEN-LAST:event_ApproveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApproveButton;
    private javax.swing.JComboBox CatFilter;
    private javax.swing.JButton ClaimButton;
    private javax.swing.JButton GoButton;
    private javax.swing.JComboBox<String> PeriodFilter;
    private javax.swing.JTextField SearchTextBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable moderatorAdvertisementsJTable;
    private javax.swing.JTable unclaimedJTable;
    // End of variables declaration//GEN-END:variables
}
